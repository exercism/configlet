#!/usr/bin/env bash
set -eo pipefail

archives_dir='archives'
build_tag="${GITHUB_REF_NAME}"
# shellcheck disable=SC2153
zig_target="${ZIG_TARGET}"

cross_compile() {
  local target="$1"

  local zig_arch
  zig_arch="$(cut -d'-' -f1 <<< "${target}")"
  local arch
  case "${zig_arch}" in
    aarch64) arch='arm64'       ;;
    *)       arch="${zig_arch}" ;;
  esac

  local os
  os="$(cut -d'-' -f2 <<< "${target}")"
  local nim_os
  case "${os}" in
    macos) nim_os='macosx' ;;
    *)     nim_os="${os}"  ;;
  esac

  local binary_name
  case "${os}" in
    linux | macos) binary_name='configlet'     ;;
    windows)       binary_name='configlet.exe' ;;
  esac

  local build_options=(
    -d:release
    --cpu:"${arch}"
    --os:"${nim_os}"
    -d:zig
    -d:target:"${target}"
    -o:"${binary_name}"
  )
  # On macOS, add to the compiler's and linker's framework search path.
  dir='/Library/Developer/CommandLineTools/SDKs/MacOSX13.1.sdk/System/Library/Frameworks'
  if [[ -d "${dir}" ]]; then
    build_options+=("--passC:-F${dir}")
    build_options+=("--passL:-F${dir}")
    # Strip
    build_options+=("--passL:-s")
  fi

  nimble --verbose build "${build_options[@]}"
  file "${binary_name}"

  mkdir -p "${archives_dir}"
  local archive_base="${archives_dir}/configlet_${build_tag}_${os}_${arch}"
  case "${os}" in
    linux | macos) tar -cvzf "${archive_base}.tar.gz" "${binary_name}" ;;
    windows)       7z a "${archive_base}.zip" "${binary_name}"         ;;
  esac
}

main() {
  nimble --accept install --depsOnly
  cross_compile "${zig_target}"
  gh release upload "${build_tag}" "${archives_dir}"/*
}

main
