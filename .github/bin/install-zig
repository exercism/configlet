#!/usr/bin/env bash
set -eo pipefail

version='0.14.1' # 2025-05-21

case "$(uname)" in
  Darwin*)   os='macos'   ;;
  Linux*)    os='linux'   ;;
  Windows*)  os='windows' ;;
  MINGW*)    os='windows' ;;
  MSYS_NT-*) os='windows' ;;
  *)         os='linux'   ;;
esac

case "${os}" in
  windows*) ext='zip'    ;;
  *)        ext='tar.xz' ;;
esac

release_name="zig-${os}-x86_64-${version}"
archive="${release_name}.${ext}"
url="https://ziglang.org/download/${version}/${archive}"

curlopts=(
  --silent
  --show-error
  --fail
  --location
  --retry 3
)

# Download the release archive.
echo "Downloading Zig release archive..." >&2
curl "${curlopts[@]}" --output "${archive}" "${url}"

# Check that the archive has the expected hash.
echo "Verifying archive..." >&2
case "${os}" in
  linux)
    archive_sha256='24aeeec8af16c381934a6cd7d95c807a8cb2cf7df9fa40d359aa884195c4716c'
    echo "${archive_sha256} ${archive}" | sha256sum -c -
    ;;
  macos)
    archive_sha256='b0f8bdfb9035783db58dd6c19d7dea89892acc3814421853e5752fe4573e5f43'
    shasum -a 256 -c <<< "${archive_sha256} *${archive}"
    ;;
  windows)
    archive_sha256='554f5378228923ffd558eac35e21af020c73789d87afeabf4bfd16f2e6feed2c'
    # TODO: check windows archive checksum
    ;;
esac

# Extract the archive, then remove it.
echo "Extracting archive..." >&2
case "${ext}" in
  *zip) unzip -q "${archive}"   ;;
  *)    tar xJf "${archive}" ;;
esac
rm "${archive}"

# Add zig directory to `GITHUB_PATH`.
zig_dir="$(pwd)/${release_name}"
echo "${zig_dir}" >> "${GITHUB_PATH}"

# Install `zigcc`, which is just a wrapper for `zig cc`. We need this because
# the value of e.g. `--clang.exe` cannot contain a space (Nim requires the value
# to be an executable, not a command).
zigcc_path="${zig_dir}/zigcc"
printf '#!/usr/bin/env sh\nzig cc $@\n' > "${zigcc_path}"
chmod +x "${zigcc_path}"

# Print the versions of Zig and Clang.
"${zig_dir}"/zig version
"${zig_dir}"/zig cc --version
echo "Successfully installed Zig ${version}."
