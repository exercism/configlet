name: Build

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  create-empty-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0 # Allows using `git log` to set initial release notes.

      - name: Create empty release
        shell: bash
        run: ./.github/bin/create-empty-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [create-empty-release]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            runs-on: ubuntu-24.04
            arch: x86-64

          - os: macos
            runs-on: macos-13
            arch: x86-64

          - os: macos
            runs-on: macos-15
            arch: arm64

          - os: windows
            runs-on: windows-2022
            arch: x86-64

    name: "${{ matrix.os }}-${{ matrix.arch }}"
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: On Linux, install musl
        if: matrix.os == 'linux'
        run: ./.github/bin/linux-install-musl

      - name: Install Nim
        uses: iffy/install-nim@cceb6b4d10dcb1968575ac083d4981c0302fd00d
        with:
          version: "binary:2.2.4"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build binary
        shell: bash
        run: ./.github/bin/build

      - name: Upload archive
        shell: bash
        run: ./.github/bin/upload-archive
        env:
          OS: ${{ matrix.os }}
          ARCH: ${{ matrix.arch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cross-compile:
    needs: [create-empty-release]
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-24.04
            zig_target: aarch64-linux-musl

          - runs-on: ubuntu-24.04
            zig_target: riscv64-linux-musl

          - runs-on: ubuntu-24.04
            zig_target: aarch64-windows-gnu

    name: "${{ matrix.zig_target }}"
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install Nim
        uses: iffy/install-nim@cceb6b4d10dcb1968575ac083d4981c0302fd00d
        with:
          version: "binary:2.2.4"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Zig
        uses: mlugg/setup-zig@8d6198c65fb0feaa111df26e6b467fea8345e46f
        with:
          version: 0.14.1

      - name: Install zigcc
        shell: bash
        run: ./.github/bin/install-zigcc

      - name: Cross-compile
        shell: bash
        run: ./.github/bin/cross-compile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ZIG_TARGET: ${{ matrix.zig_target }}

  checksums:
    needs: [build, cross-compile]
    runs-on: ubuntu-24.04
    name: Upload signatures and checksums
    permissions:
      attestations: write
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install minisign
        run: ./.github/bin/linux-install-minisign

      - name: Upload signatures and checksums
        run: ./.github/bin/upload-signatures-and-checksums
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONFIGLET_MINISIGN_SECRET_KEY: ${{ secrets.CONFIGLET_MINISIGN_SECRET_KEY }}

      - name: Generate signed build provenance attestations
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be
        with:
          subject-checksums: 'releases/*/configlet_*_checksums_sha256.txt'

      - name: Verify artifact attestation
        run: gh attestation verify releases/*/*linux_x86-64.tar.gz -R exercism/configlet
